// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Source.Models.DBF;

namespace Source.Migrations
{
    [DbContext(typeof(admin_hifivetestContext))]
    [Migration("20200103025120_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("db_owner")
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Source.Models.DBF.abc", b =>
                {
                    b.Property<int>("abc_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("abc_id");

                    b.ToTable("abcs");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbadmin", b =>
                {
                    b.Property<string>("AdminEmail")
                        .HasColumnName("admin_email")
                        .HasMaxLength(100);

                    b.Property<string>("AdminAddress")
                        .HasColumnName("admin_address");

                    b.Property<string>("AdminAvatar")
                        .HasColumnName("admin_avatar");

                    b.Property<string>("AdminCode")
                        .HasColumnName("admin_code");

                    b.Property<DateTime?>("AdminDatecreated")
                        .HasColumnName("admin_datecreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("AdminDatemodified")
                        .HasColumnName("admin_datemodified")
                        .HasColumnType("datetime");

                    b.Property<string>("AdminDepcription")
                        .HasColumnName("admin_depcription");

                    b.Property<bool?>("AdminFullcontrol")
                        .HasColumnName("admin_fullcontrol");

                    b.Property<string>("AdminFullname")
                        .HasColumnName("admin_fullname");

                    b.Property<bool?>("AdminGender")
                        .HasColumnName("admin_gender");

                    b.Property<string>("AdminPassword")
                        .HasColumnName("admin_password");

                    b.Property<string>("AdminPhone")
                        .HasColumnName("admin_phone");

                    b.Property<int?>("AdminPosition")
                        .HasColumnName("admin_position");

                    b.Property<string>("AdminUsername")
                        .HasColumnName("admin_username");

                    b.Property<int?>("GroupId")
                        .HasColumnName("group_id");

                    b.HasKey("AdminEmail");

                    b.HasIndex("GroupId");

                    b.ToTable("tbadmin","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbbaivietuser", b =>
                {
                    b.Property<int>("BaivietuserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("baivietuser_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BaivietuserContent")
                        .HasColumnName("baivietuser_content");

                    b.Property<string>("BaivietuserTitle")
                        .HasColumnName("baivietuser_title");

                    b.HasKey("BaivietuserId");

                    b.ToTable("tbbaivietuser","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbbanggiachitietuser", b =>
                {
                    b.Property<int>("BanggiachitietuserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("banggiachitietuser_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BanggiachitietuserContent")
                        .HasColumnName("banggiachitietuser_content");

                    b.Property<string>("BanggiachitietuserTitle")
                        .HasColumnName("banggiachitietuser_title");

                    b.Property<string>("BanggiachitietuserTitle1")
                        .HasColumnName("banggiachitietuser_title1");

                    b.Property<string>("BanggiachitietuserTitle2")
                        .HasColumnName("banggiachitietuser_title2");

                    b.Property<string>("BanggiachitietuserTitle3")
                        .HasColumnName("banggiachitietuser_title3");

                    b.Property<string>("BanggiachitietuserTitle4")
                        .HasColumnName("banggiachitietuser_title4");

                    b.Property<string>("BanggiachitietuserTitle5")
                        .HasColumnName("banggiachitietuser_title5");

                    b.Property<string>("BanggiachitietuserTitle6")
                        .HasColumnName("banggiachitietuser_title6");

                    b.Property<string>("BanggiachitietuserTitle7")
                        .HasColumnName("banggiachitietuser_title7");

                    b.Property<string>("BanggiachitietuserTitle8")
                        .HasColumnName("banggiachitietuser_title8");

                    b.Property<string>("BanggiachitietuserTitle9")
                        .HasColumnName("banggiachitietuser_title9");

                    b.Property<int?>("BanggiauserId")
                        .HasColumnName("banggiauser_id");

                    b.Property<int?>("ProjectId")
                        .HasColumnName("project_id");

                    b.HasKey("BanggiachitietuserId");

                    b.ToTable("tbbanggiachitietuser","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbbanggiagoidichvu", b =>
                {
                    b.Property<int>("GoidichvuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("goidichvu_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GoidichvuName")
                        .HasColumnName("goidichvu_name");

                    b.Property<bool?>("Hidden")
                        .HasColumnName("hidden");

                    b.HasKey("GoidichvuId");

                    b.ToTable("tbbanggiagoidichvu","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbbanggiauser", b =>
                {
                    b.Property<int>("BanggiauserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("banggiauser_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BanggiauserContent")
                        .HasColumnName("banggiauser_content");

                    b.Property<string>("BanggiauserTitle")
                        .HasColumnName("banggiauser_title");

                    b.Property<string>("BanggiauserTitle1")
                        .HasColumnName("banggiauser_title1");

                    b.Property<string>("BanggiauserTitle2")
                        .HasColumnName("banggiauser_title2");

                    b.Property<string>("BanggiauserTitle3")
                        .HasColumnName("banggiauser_title3");

                    b.Property<string>("BanggiauserTitle4")
                        .HasColumnName("banggiauser_title4");

                    b.Property<string>("BanggiauserTitle5")
                        .HasColumnName("banggiauser_title5");

                    b.Property<string>("BanggiauserTitle6")
                        .HasColumnName("banggiauser_title6");

                    b.Property<string>("BanggiauserTitle7")
                        .HasColumnName("banggiauser_title7");

                    b.Property<string>("BanggiauserTitle8")
                        .HasColumnName("banggiauser_title8");

                    b.Property<string>("BanggiauserTitle9")
                        .HasColumnName("banggiauser_title9");

                    b.Property<int?>("Goidichvu")
                        .HasColumnName("goidichvu");

                    b.Property<string>("UserEmail")
                        .HasColumnName("user_email");

                    b.Property<int?>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("BanggiauserId");

                    b.ToTable("tbbanggiauser","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbbanneruser", b =>
                {
                    b.Property<int>("BanneruserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("banneruser_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BanneruserImage")
                        .HasColumnName("banneruser_image");

                    b.Property<string>("BanneruserVitri")
                        .HasColumnName("banneruser_vitri");

                    b.Property<string>("UserEmail")
                        .HasColumnName("user_email");

                    b.HasKey("BanneruserId");

                    b.ToTable("tbbanneruser","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbbaogia", b =>
                {
                    b.Property<int>("BaogiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("baogia_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BaogiaContent")
                        .HasColumnName("baogia_content");

                    b.Property<string>("BaogiaTitle1")
                        .HasColumnName("baogia_title1");

                    b.Property<string>("BaogiaTitle2")
                        .HasColumnName("baogia_title2");

                    b.Property<string>("BaogiaTitle3")
                        .HasColumnName("baogia_title3");

                    b.Property<string>("BaogiaTitle4")
                        .HasColumnName("baogia_title4");

                    b.Property<string>("BaogiaTitle5")
                        .HasColumnName("baogia_title5");

                    b.Property<string>("BaogiaTitle6")
                        .HasColumnName("baogia_title6");

                    b.Property<string>("BaogiaTitle7")
                        .HasColumnName("baogia_title7");

                    b.Property<string>("BaogiaTitle8")
                        .HasColumnName("baogia_title8");

                    b.Property<string>("BaogiaTitle9")
                        .HasColumnName("baogia_title9");

                    b.Property<bool?>("Hidden")
                        .HasColumnName("hidden");

                    b.Property<int?>("Position")
                        .HasColumnName("position");

                    b.HasKey("BaogiaId");

                    b.ToTable("tbbaogia","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbbaogiachitiet", b =>
                {
                    b.Property<int>("BaogiachitietId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("baogiachitiet_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BaogiaId")
                        .HasColumnName("baogia_id");

                    b.Property<string>("BaogiachitietContent")
                        .HasColumnName("baogiachitiet_content");

                    b.Property<string>("BaogiachitietTitle1")
                        .HasColumnName("baogiachitiet_title1");

                    b.Property<string>("BaogiachitietTitle10")
                        .HasColumnName("baogiachitiet_title10");

                    b.Property<string>("BaogiachitietTitle11")
                        .HasColumnName("baogiachitiet_title11");

                    b.Property<string>("BaogiachitietTitle12")
                        .HasColumnName("baogiachitiet_title12");

                    b.Property<string>("BaogiachitietTitle13")
                        .HasColumnName("baogiachitiet_title13");

                    b.Property<string>("BaogiachitietTitle14")
                        .HasColumnName("baogiachitiet_title14");

                    b.Property<string>("BaogiachitietTitle15")
                        .HasColumnName("baogiachitiet_title15");

                    b.Property<string>("BaogiachitietTitle2")
                        .HasColumnName("baogiachitiet_title2");

                    b.Property<string>("BaogiachitietTitle3")
                        .HasColumnName("baogiachitiet_title3");

                    b.Property<string>("BaogiachitietTitle4")
                        .HasColumnName("baogiachitiet_title4");

                    b.Property<string>("BaogiachitietTitle5")
                        .HasColumnName("baogiachitiet_title5");

                    b.Property<string>("BaogiachitietTitle6")
                        .HasColumnName("baogiachitiet_title6");

                    b.Property<string>("BaogiachitietTitle7")
                        .HasColumnName("baogiachitiet_title7");

                    b.Property<string>("BaogiachitietTitle8")
                        .HasColumnName("baogiachitiet_title8");

                    b.Property<string>("BaogiachitietTitle9")
                        .HasColumnName("baogiachitiet_title9");

                    b.Property<bool?>("Hidden")
                        .HasColumnName("hidden");

                    b.Property<int?>("LangguageId")
                        .HasColumnName("langguage_id");

                    b.Property<int?>("Position")
                        .HasColumnName("position");

                    b.HasKey("BaogiachitietId");

                    b.ToTable("tbbaogiachitiet","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbbaogialienquan", b =>
                {
                    b.Property<int>("BaogialienquanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("baogialienquan_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BaogiaId")
                        .HasColumnName("baogia_id");

                    b.Property<string>("BaogialienquanContent")
                        .HasColumnName("baogialienquan_content");

                    b.Property<DateTime?>("BaogialienquanCreatedate")
                        .HasColumnName("baogialienquan_createdate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("BaogialienquanDatemodified")
                        .HasColumnName("baogialienquan_datemodified")
                        .HasColumnType("datetime");

                    b.Property<string>("BaogialienquanTitle")
                        .HasColumnName("baogialienquan_title");

                    b.Property<bool?>("Hidden")
                        .HasColumnName("hidden");

                    b.Property<int?>("LangguageId")
                        .HasColumnName("langguage_id");

                    b.Property<int?>("Position")
                        .HasColumnName("position");

                    b.HasKey("BaogialienquanId");

                    b.HasIndex("BaogiaId");

                    b.ToTable("tbbaogialienquan","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbcategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("category_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryDepcription")
                        .HasColumnName("category_depcription");

                    b.Property<string>("CategoryIcon")
                        .HasColumnName("category_icon");

                    b.Property<int?>("CategoryLevel")
                        .HasColumnName("category_level");

                    b.Property<string>("CategoryMapped")
                        .HasColumnName("category_mapped");

                    b.Property<string>("CategoryName")
                        .HasColumnName("category_name");

                    b.Property<int?>("CategoryParent")
                        .HasColumnName("category_parent");

                    b.Property<DateTime?>("Datecreated")
                        .HasColumnName("datecreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Datemodified")
                        .HasColumnName("datemodified")
                        .HasColumnType("datetime");

                    b.Property<int?>("GroupcateId")
                        .HasColumnName("groupcate_id");

                    b.Property<int?>("LangguageId")
                        .HasColumnName("langguage_id");

                    b.Property<int?>("Position")
                        .HasColumnName("position");

                    b.HasKey("CategoryId");

                    b.HasIndex("GroupcateId");

                    b.ToTable("tbcategory","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbcontact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("contact_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactContent")
                        .HasColumnName("contact_content");

                    b.Property<string>("ContactEmail")
                        .HasColumnName("contact_email");

                    b.Property<string>("ContactName")
                        .HasColumnName("contact_name");

                    b.Property<string>("ContactPhone")
                        .HasColumnName("contact_phone");

                    b.Property<int?>("ProjectId")
                        .HasColumnName("project_id");

                    b.HasKey("ContactId");

                    b.ToTable("tbcontact","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbform", b =>
                {
                    b.Property<int>("FormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("form_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FormCode")
                        .HasColumnName("form_code");

                    b.Property<DateTime?>("FormDatecreated")
                        .HasColumnName("form_datecreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FormDatemodified")
                        .HasColumnName("form_datemodified")
                        .HasColumnType("datetime");

                    b.Property<string>("FormDepcription")
                        .HasColumnName("form_depcription");

                    b.Property<string>("FormIcon")
                        .HasColumnName("form_icon");

                    b.Property<string>("FormLink")
                        .HasColumnName("form_link");

                    b.Property<string>("FormName")
                        .HasColumnName("form_name");

                    b.Property<int?>("FormPosition")
                        .HasColumnName("form_position");

                    b.Property<int?>("ModuleId")
                        .HasColumnName("module_id");

                    b.HasKey("FormId");

                    b.HasIndex("ModuleId");

                    b.ToTable("tbform","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.TbformAccess", b =>
                {
                    b.Property<int>("FormAccessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("form_access_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminEmail")
                        .HasColumnName("admin_email")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("FormAccessDatecreate")
                        .HasColumnName("form_access_datecreate")
                        .HasColumnType("datetime");

                    b.Property<string>("FormAccessType")
                        .HasColumnName("form_access_type");

                    b.Property<int?>("FormId")
                        .HasColumnName("form_id");

                    b.HasKey("FormAccessId");

                    b.HasIndex("FormId");

                    b.ToTable("tbform_access","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbgiaproject", b =>
                {
                    b.Property<int>("GiaprojectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("giaproject_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BaogiachitietId")
                        .HasColumnName("baogiachitiet_id");

                    b.Property<int?>("ProjectId")
                        .HasColumnName("project_id");

                    b.HasKey("GiaprojectId");

                    b.ToTable("tbgiaproject","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbgroup", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("group_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GroupCode")
                        .HasColumnName("group_code");

                    b.Property<DateTime?>("GroupDatemodified")
                        .HasColumnName("group_datemodified")
                        .HasColumnType("datetime");

                    b.Property<string>("GroupDepcription")
                        .HasColumnName("group_depcription");

                    b.Property<bool?>("GroupFullcontrol")
                        .HasColumnName("group_fullcontrol");

                    b.Property<string>("GroupName")
                        .HasColumnName("group_name");

                    b.Property<int?>("GroupPemissionnumber")
                        .HasColumnName("group_pemissionnumber");

                    b.Property<int?>("GroupPosition")
                        .HasColumnName("group_position");

                    b.HasKey("GroupId");

                    b.ToTable("tbgroup","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbgroupcate", b =>
                {
                    b.Property<int>("GroupcateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("groupcate_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Datecreated")
                        .HasColumnName("datecreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Datemodified")
                        .HasColumnName("datemodified")
                        .HasColumnType("datetime");

                    b.Property<string>("GroupcateDepcription")
                        .HasColumnName("groupcate_depcription");

                    b.Property<string>("GroupcateIcon")
                        .HasColumnName("groupcate_icon");

                    b.Property<int?>("GroupcateLevel")
                        .HasColumnName("groupcate_level");

                    b.Property<string>("GroupcateMapped")
                        .HasColumnName("groupcate_mapped");

                    b.Property<string>("GroupcateName")
                        .HasColumnName("groupcate_name");

                    b.Property<int?>("GroupcateParent")
                        .HasColumnName("groupcate_parent");

                    b.Property<int?>("LangguageId")
                        .HasColumnName("langguage_id");

                    b.Property<int?>("Position")
                        .HasColumnName("position");

                    b.HasKey("GroupcateId");

                    b.ToTable("tbgroupcate","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbimageproject", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("image_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageLink")
                        .HasColumnName("image_link");

                    b.Property<string>("ImageSummary")
                        .HasColumnName("image_summary");

                    b.Property<string>("ImageTitle")
                        .HasColumnName("image_title");

                    b.Property<int?>("LangguageId")
                        .HasColumnName("langguage_id");

                    b.Property<int?>("Position")
                        .HasColumnName("position");

                    b.Property<int?>("ProjectId")
                        .HasColumnName("project_id");

                    b.HasKey("ImageId");

                    b.HasIndex("ProjectId");

                    b.ToTable("tbimageproject","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbintroduce", b =>
                {
                    b.Property<int>("IntroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("intro_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IntroAuthor")
                        .HasColumnName("intro_author");

                    b.Property<string>("IntroConntent")
                        .HasColumnName("intro_conntent");

                    b.Property<DateTime?>("IntroCreatedate")
                        .HasColumnName("intro_createdate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("IntroDatemodified")
                        .HasColumnName("intro_datemodified")
                        .HasColumnType("datetime");

                    b.Property<string>("IntroImage")
                        .HasColumnName("intro_image");

                    b.Property<string>("IntroSummary")
                        .HasColumnName("intro_summary");

                    b.Property<string>("IntroTitle")
                        .HasColumnName("intro_title");

                    b.Property<int?>("LangguageId")
                        .HasColumnName("langguage_id");

                    b.Property<int?>("Position")
                        .HasColumnName("position");

                    b.HasKey("IntroId");

                    b.ToTable("tbintroduce","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tblanguage", b =>
                {
                    b.Property<int>("LangguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("langguage_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Datemodified")
                        .HasColumnName("datemodified")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Dtecreated")
                        .HasColumnName("dtecreated")
                        .HasColumnType("datetime");

                    b.Property<string>("LanguageCode")
                        .HasColumnName("language_code");

                    b.Property<string>("LanguageIcon")
                        .HasColumnName("language_icon");

                    b.Property<string>("LanguageName")
                        .HasColumnName("language_name");

                    b.Property<int?>("Position")
                        .HasColumnName("position");

                    b.HasKey("LangguageId");

                    b.ToTable("tblanguage","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tblogo", b =>
                {
                    b.Property<int>("LogoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("logo_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LogoImage")
                        .HasColumnName("logo_image");

                    b.Property<string>("LogoLink")
                        .HasColumnName("logo_link");

                    b.Property<string>("LogoName")
                        .HasColumnName("logo_name");

                    b.HasKey("LogoId");

                    b.ToTable("tblogo","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbmodule", b =>
                {
                    b.Property<int>("ModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("module_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ModuleCode")
                        .HasColumnName("module_code");

                    b.Property<DateTime?>("ModuleDatemodified")
                        .HasColumnName("module_datemodified")
                        .HasColumnType("datetime");

                    b.Property<string>("ModuleDepcription")
                        .HasColumnName("module_depcription");

                    b.Property<string>("ModuleIcon")
                        .HasColumnName("module_icon");

                    b.Property<int?>("ModuleLevel")
                        .HasColumnName("module_level");

                    b.Property<string>("ModuleLink")
                        .HasColumnName("module_link");

                    b.Property<string>("ModuleName")
                        .HasColumnName("module_name");

                    b.Property<int?>("ModuleParent")
                        .HasColumnName("module_parent");

                    b.Property<int?>("ModulePosition")
                        .HasColumnName("module_position");

                    b.HasKey("ModuleId");

                    b.ToTable("tbmodule","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbnews", b =>
                {
                    b.Property<int>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("news_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Datecreated")
                        .HasColumnName("datecreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Datemodified")
                        .HasColumnName("datemodified")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Hidden")
                        .HasColumnName("hidden");

                    b.Property<int?>("LangguageId")
                        .HasColumnName("langguage_id");

                    b.Property<string>("NewsAuthor")
                        .HasColumnName("news_author");

                    b.Property<string>("NewsContent")
                        .HasColumnName("news_content");

                    b.Property<string>("NewsImage")
                        .HasColumnName("news_image");

                    b.Property<string>("NewsImagename")
                        .HasColumnName("news_imagename");

                    b.Property<string>("NewsLink")
                        .HasColumnName("news_link");

                    b.Property<string>("NewsName")
                        .HasColumnName("news_name");

                    b.Property<string>("NewsNote")
                        .HasColumnName("news_note");

                    b.Property<string>("NewsSummary")
                        .HasColumnName("news_summary");

                    b.Property<string>("NewsTitle")
                        .HasColumnName("news_title");

                    b.Property<int?>("NewscateId")
                        .HasColumnName("newscate_id");

                    b.Property<int?>("Position")
                        .HasColumnName("position");

                    b.HasKey("NewsId");

                    b.HasIndex("NewscateId");

                    b.ToTable("tbnews","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbnewscate", b =>
                {
                    b.Property<int>("NewscateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("newscate_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LangguageId")
                        .HasColumnName("langguage_id");

                    b.Property<string>("NewscateImagename")
                        .HasColumnName("newscate_imagename");

                    b.Property<string>("NewscateLink")
                        .HasColumnName("newscate_link");

                    b.Property<string>("NewscateName")
                        .HasColumnName("newscate_name");

                    b.Property<string>("NewscateNote")
                        .HasColumnName("newscate_note");

                    b.Property<int?>("Position")
                        .HasColumnName("position");

                    b.HasKey("NewscateId");

                    b.ToTable("tbnewscate","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbproject", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("project_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnName("category_id");

                    b.Property<int?>("LangguageId")
                        .HasColumnName("langguage_id");

                    b.Property<int?>("Position")
                        .HasColumnName("position");

                    b.Property<string>("ProjectContent")
                        .HasColumnName("project_content");

                    b.Property<bool?>("ProjectHidden")
                        .HasColumnName("project_hidden");

                    b.Property<string>("ProjectImage")
                        .HasColumnName("project_image");

                    b.Property<string>("ProjectLink")
                        .HasColumnName("project_link");

                    b.Property<string>("ProjectName")
                        .HasColumnName("project_name");

                    b.Property<int?>("ProjectPrice")
                        .HasColumnName("project_price");

                    b.Property<int?>("ServiceId")
                        .HasColumnName("service_id");

                    b.HasKey("ProjectId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ServiceId");

                    b.ToTable("tbproject","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbreviewscustome", b =>
                {
                    b.Property<int>("ReviewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("reviews_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Hidden")
                        .HasColumnName("hidden");

                    b.Property<int?>("LangguageId")
                        .HasColumnName("langguage_id");

                    b.Property<int?>("Position")
                        .HasColumnName("position");

                    b.Property<string>("ReviewContent")
                        .HasColumnName("review_content");

                    b.Property<DateTime?>("ReviewCreatedated")
                        .HasColumnName("review_createdated")
                        .HasColumnType("datetime");

                    b.Property<string>("ReviewIcon")
                        .HasColumnName("review_icon");

                    b.Property<string>("ReviewName")
                        .HasColumnName("review_name");

                    b.HasKey("ReviewsId");

                    b.ToTable("tbreviewscustome","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbseo", b =>
                {
                    b.Property<int>("SeoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("seo_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("SeoModifieddate")
                        .HasColumnName("seo_modifieddate")
                        .HasColumnType("datetime");

                    b.Property<string>("SeoName")
                        .HasColumnName("seo_name");

                    b.Property<string>("SeoUrl")
                        .HasColumnName("seo_url");

                    b.HasKey("SeoId");

                    b.ToTable("tbseo","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.TbseoDetail", b =>
                {
                    b.Property<int>("SeodetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("seodetail_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Objectguid")
                        .HasColumnName("objectguid");

                    b.Property<Guid?>("SeoGuid")
                        .HasColumnName("seo_guid");

                    b.Property<int?>("SeoId")
                        .HasColumnName("seo_id");

                    b.Property<DateTime?>("SeoModifieddate")
                        .HasColumnName("seo_modifieddate")
                        .HasColumnType("datetime");

                    b.Property<string>("SeodetailContent")
                        .HasColumnName("seodetail_content");

                    b.HasKey("SeodetailId");

                    b.HasIndex("SeoId");

                    b.ToTable("tbseo_detail","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbservice", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("service_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LangguageId")
                        .HasColumnName("langguage_id");

                    b.Property<string>("ServiceContent")
                        .HasColumnName("service_content");

                    b.Property<DateTime?>("ServiceCreatedate")
                        .HasColumnName("service_createdate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ServiceDatemodified")
                        .HasColumnName("service_datemodified")
                        .HasColumnType("datetime");

                    b.Property<bool?>("ServiceHidden")
                        .HasColumnName("service_hidden");

                    b.Property<string>("ServiceImage")
                        .HasColumnName("service_image");

                    b.Property<string>("ServiceLink")
                        .HasColumnName("service_link");

                    b.Property<string>("ServiceSummary")
                        .HasColumnName("service_summary");

                    b.Property<string>("ServiceTitle")
                        .HasColumnName("service_title");

                    b.HasKey("ServiceId");

                    b.ToTable("tbservice","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbservicedetail", b =>
                {
                    b.Property<int>("ServicedetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("servicedetail_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Hidden")
                        .HasColumnName("hidden");

                    b.Property<int?>("LangguageId")
                        .HasColumnName("langguage_id");

                    b.Property<int?>("Position")
                        .HasColumnName("position");

                    b.Property<int?>("ServiceId")
                        .HasColumnName("service_id");

                    b.Property<string>("ServicedetailContent")
                        .HasColumnName("servicedetail_content");

                    b.Property<DateTime?>("ServicedetailCreatedate")
                        .HasColumnName("servicedetail_createdate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ServicedetailDatemodified")
                        .HasColumnName("servicedetail_datemodified")
                        .HasColumnType("datetime");

                    b.Property<string>("ServicedetailTitle")
                        .HasColumnName("servicedetail_title");

                    b.HasKey("ServicedetailId");

                    b.HasIndex("ServiceId");

                    b.ToTable("tbservicedetail","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbslide", b =>
                {
                    b.Property<int>("SlideId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("slide_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SlideImage")
                        .HasColumnName("slide_image");

                    b.Property<string>("SlideLink")
                        .HasColumnName("slide_link");

                    b.Property<string>("SlideTitle1")
                        .HasColumnName("slide_title1");

                    b.Property<string>("SlideTitle2")
                        .HasColumnName("slide_title2");

                    b.Property<string>("SlideTitle3")
                        .HasColumnName("slide_title3");

                    b.HasKey("SlideId");

                    b.ToTable("tbslide","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbvideo", b =>
                {
                    b.Property<int>("VideoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("video_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LangguageId")
                        .HasColumnName("langguage_id");

                    b.Property<int?>("Position")
                        .HasColumnName("position");

                    b.Property<string>("VideoContent")
                        .HasColumnName("video_content");

                    b.Property<DateTime?>("VideoCreatedate")
                        .HasColumnName("video_createdate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("VideoDatemodified")
                        .HasColumnName("video_datemodified")
                        .HasColumnType("datetime");

                    b.Property<string>("VideoImage")
                        .HasColumnName("video_image");

                    b.Property<string>("VideoLink")
                        .HasColumnName("video_link");

                    b.Property<string>("VideoSummary")
                        .HasColumnName("video_summary");

                    b.Property<string>("VideoTitle")
                        .HasColumnName("video_title");

                    b.HasKey("VideoId");

                    b.ToTable("tbvideo","dbo");
                });

            modelBuilder.Entity("Source.Models.DBF.Tbadmin", b =>
                {
                    b.HasOne("Source.Models.DBF.Tbgroup", "Group")
                        .WithMany("Tbadmin")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK__tbadmin__group_i__49C3F6B7")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Source.Models.DBF.Tbbaogialienquan", b =>
                {
                    b.HasOne("Source.Models.DBF.Tbbaogia", "Baogia")
                        .WithMany("Tbbaogialienquan")
                        .HasForeignKey("BaogiaId")
                        .HasConstraintName("FK__tbbaogial__baogi__4AB81AF0")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Source.Models.DBF.Tbcategory", b =>
                {
                    b.HasOne("Source.Models.DBF.Tbgroupcate", "Groupcate")
                        .WithMany("Tbcategory")
                        .HasForeignKey("GroupcateId")
                        .HasConstraintName("FK__tbcategor__group__4BAC3F29")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Source.Models.DBF.Tbform", b =>
                {
                    b.HasOne("Source.Models.DBF.Tbmodule", "Module")
                        .WithMany("Tbform")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("FK__tbform__module_i__4CA06362")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Source.Models.DBF.TbformAccess", b =>
                {
                    b.HasOne("Source.Models.DBF.Tbform", "Form")
                        .WithMany("TbformAccess")
                        .HasForeignKey("FormId")
                        .HasConstraintName("FK__tbform_ac__form___4D94879B")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Source.Models.DBF.Tbimageproject", b =>
                {
                    b.HasOne("Source.Models.DBF.Tbproject", "Project")
                        .WithMany("Tbimageproject")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK__tbimagepr__proje__4E88ABD4")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Source.Models.DBF.Tbnews", b =>
                {
                    b.HasOne("Source.Models.DBF.Tbnewscate", "Newscate")
                        .WithMany("Tbnews")
                        .HasForeignKey("NewscateId")
                        .HasConstraintName("FK__tbnews__newscate__4F7CD00D")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Source.Models.DBF.Tbproject", b =>
                {
                    b.HasOne("Source.Models.DBF.Tbcategory", "Category")
                        .WithMany("Tbproject")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__tbproject__categ__5070F446")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Source.Models.DBF.Tbservice", "Service")
                        .WithMany("Tbproject")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("FK__tbproject__servi__5165187F")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Source.Models.DBF.TbseoDetail", b =>
                {
                    b.HasOne("Source.Models.DBF.Tbseo", "Seo")
                        .WithMany("TbseoDetail")
                        .HasForeignKey("SeoId")
                        .HasConstraintName("FK__tbseo_det__seo_i__52593CB8")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Source.Models.DBF.Tbservicedetail", b =>
                {
                    b.HasOne("Source.Models.DBF.Tbservice", "Service")
                        .WithMany("Tbservicedetail")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("FK__tbservice__servi__534D60F1")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
